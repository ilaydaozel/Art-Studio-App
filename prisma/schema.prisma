
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  surname String
  userType String
  email String @unique
  emailVerified DateTime?
  dateOfBirth DateTime?
  gender String?
  instagramUrl String?
  facebookUrl String?
  biography String?
  profilePic String?
  hashedPassword String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  artworks UserArtwork[]
}

model UserArtwork{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  artistId String @db.ObjectId
  title String
  description String?
  creationYear DateTime
  medium String?
  type String?
  width Int?
  heigth Int?
  medias ArtworkMedia[]
  exhibitionIds String[] @db.ObjectId
  user User @relation(fields: [artistId], references: [id], onDelete: Cascade)
  exhibitions Exhibition[] @relation(fields: [exhibitionIds], references: [id])
}

model GuestArtwork{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  artistName String
  artistSurname String
  description String?
  creationYear DateTime
  medium String?
  type String?
  width Int?
  heigth Int?
  medias ArtworkMedia[]
  exhibitionIds String[] @db.ObjectId
  exhibitions Exhibition[] @relation(fields: [exhibitionIds], references: [id])
}

model ArtworkMedia{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  mediaUrl String
  userArtworkId String? @db.ObjectId
  guestArtworkId String? @db.ObjectId
  userArtwork UserArtwork? @relation(fields: [userArtworkId], references: [id], onDelete: Cascade)
  guestArtwork GuestArtwork? @relation(fields: [guestArtworkId], references: [id], onDelete: Cascade)
}

model Exhibition{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  description String?
  startDate DateTime
  endDate DateTime
  organizedBy String?
  userArtworkIds String[] @db.ObjectId
  guestArtworkIds String[] @db.ObjectId
  userArtworks UserArtwork[] @relation(fields: [userArtworkIds], references: [id])
  guestArtworks GuestArtwork[] @relation(fields: [guestArtworkIds], references: [id])
}

