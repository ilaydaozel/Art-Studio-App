
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  surname String
  userType String
  email String @unique
  gender String?
  hashedPassword String?
  artistProfile ArtistProfile?
}

model ArtistProfile{ 
  id String @id @default(auto()) @map("_id") @db.ObjectId
  biography String?
  links String[]
  profilePic String?
  artworks Artwork[]
  coverImage String?
  artistId String @unique @db.ObjectId
  user User @relation(fields: [artistId], references: [id], onDelete: Cascade)
}

model ExhibitionArtwork {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  exhibition  Exhibition @relation(fields: [exhibitionId], references: [id])
  exhibitionId String @db.ObjectId
  artwork     Artwork @relation(fields: [artworkId], references: [id])
  artworkId   String @db.ObjectId
}


model Exhibition {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  description   String?
  startDate     String?
  endDate       String?
  organizedBy   String?
  coverImage    String?
  exhibitionArtworks ExhibitionArtwork[]  // Add this field to represent the many-to-many relationship
}

model Artwork {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  title           String
  artistName      String
  artistSurname   String
  description     String?
  creationYear    String?
  medium          String?
  type            String?
  width           Int
  height          Int
  artworkMedias   String[]
  exhibitionArtworks ExhibitionArtwork[]  // Add this field to represent the many-to-many relationship
  artistId        String? @db.ObjectId
  artist          ArtistProfile? @relation(fields: [artistId], references: [artistId], onDelete: Cascade)
}

model Announcement{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  caption String
  subcaption String?
  smallCaption String?
  coverImage String?
  link String?
  isActive Boolean
}